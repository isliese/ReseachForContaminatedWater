# -*- coding: utf-8 -*-
"""코딧 프로젝트

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bVtheUJNO25rPc89fACe9mevZ3mSk65A
"""

# 2023 - 6월 정기조사 자료

# 라이브러리 import
import pandas as pd
import folium
from folium.plugins import MarkerCluster

data = pd.read_csv("latlon2.csv", encoding='cp949', low_memory=False)
rdt = data[['정점명(영어)', '정점명(한국어)', '위도', '경도', '평균', '134Cs', '3H']]
map = folium.Map(location=[36, 127], zoom_start=7, control_scale=True)

# csv 파일에서 데이터 불러오기
for i in rdt.index:
    name_eng = rdt.loc[i, '정점명(영어)']
    lat = rdt.loc[i, '위도']
    lon = rdt.loc[i, '경도']
    average = rdt.loc[i, '평균']
    Cs = rdt.loc[i, '134Cs']
    H = rdt.loc[i, '3H']

    # 평균값에 따라 circle marker 색 다르게 설정하기
    if average < 0.65:
        color = 'blue'
    elif 0.65 <= average < 0.7:
        color = 'green'
    elif 0.7 <= average < 0.75:
        color = 'yellow'
    elif 0.75 <= average < 0.8:
        color = 'orange'
    else:
        color = 'red'

    # circle marker 정보 표시하기
    folium.CircleMarker([lat, lon],
                      radius=average * 50,
                      popup = "정점명: " + name_eng + "\n세슘농도: " + str(Cs) + "(mBq/kg)\n삼중수소: " + str(H) + "(Bq/L)",
                      stroke=False,
                      color=color,  # Set the color based on the range
                      fill=True).add_to(map)

# 주변지역을 묶어서 대략적인 개수 분포를 볼 수 있도록 마커 클러스터 생성
mc = MarkerCluster()

for i in rdt.index:
    lat = rdt.loc[i, '위도']
    lon = rdt.loc[i, '경도']
    mc.add_child(folium.CircleMarker([lat, lon]))

# 클러스터를 맵에 추가
map.add_child(mc)

# 지도 표시
map

# 2023 - 9월 긴급조사 자료

# 라이브러리 import
import pandas as pd
import folium
from folium.plugins import MarkerCluster

data = pd.read_csv("september.csv", encoding='cp949', low_memory=False)
rdt = data[['정점', '위도', '경도', '평균', '134Cs', '3H']]
map = folium.Map(location=[36, 127], zoom_start=7, control_scale=True)

# csv 파일에서 데이터 불러오기
for i in rdt.index:
    name_eng = rdt.loc[i, '정점']
    lat = rdt.loc[i, '위도']
    lon = rdt.loc[i, '경도']
    average = rdt.loc[i, '평균']
    Cs = rdt.loc[i, '134Cs']
    H = rdt.loc[i, '3H']

    # 평균값에 따라 circle marker 색 다르게 설정하기
    if average < 0.65:
        color = 'blue'
    elif 0.65 <= average < 0.7:
        color = 'green'
    elif 0.7 <= average < 0.75:
        color = 'yellow'
    elif 0.75 <= average < 0.8:
        color = 'orange'
    else:
        color = 'red'

    # circle marker 정보 표시하기
    folium.CircleMarker([lat, lon],
                      radius=average * 2,
                      popup = "정점명: " + name_eng + "\n세슘농도: " + str(Cs) + "(mBq/kg)\n삼중수소: " + str(H) + "(Bq/L)",
                      stroke=False,
                      color=color,  # Set the color based on the range
                      fill=True).add_to(map)

# 주변지역을 묶어서 대략적인 개수 분포를 볼 수 있도록 마커 클러스터 생성
mc = MarkerCluster()

for i in rdt.index:
    lat = rdt.loc[i, '위도']
    lon = rdt.loc[i, '경도']
    mc.add_child(folium.CircleMarker([lat, lon]))

# 클러스터를 맵에 추가
map.add_child(mc)

# 지도 표시
map

# 2023 - 9월 긴급조사 자료 - 색상 기준 변경

# 라이브러리 import
import pandas as pd
import folium
from folium.plugins import MarkerCluster

data = pd.read_csv("september.csv", encoding='cp949', low_memory=False)
rdt = data[['정점', '위도', '경도', '평균', '134Cs', '3H']]
map = folium.Map(location=[36, 127], zoom_start=7, control_scale=True)

# csv 파일에서 데이터 불러오기
for i in rdt.index:
    name_eng = rdt.loc[i, '정점']
    lat = rdt.loc[i, '위도']
    lon = rdt.loc[i, '경도']
    average = rdt.loc[i, '평균']
    Cs = rdt.loc[i, '134Cs']
    H = rdt.loc[i, '3H']

    # 평균값에 따라 circle marker 색 다르게 설정하기
    if average < 8.0:
        color = 'blue'
    elif 8.0 <= average < 8.5:
        color = 'green'
    elif 8.5 <= average < 8.9:
        color = 'yellow'
    elif 8.9 <= average < 9.2:
        color = 'orange'
    else:
        color = 'red'

    # circle marker 정보 표시하기
    folium.CircleMarker([lat, lon],
                      radius=average * 2,
                      popup = "정점명: " + name_eng + "\n세슘농도: " + str(Cs) + "(mBq/kg)\n삼중수소: " + str(H) + "(Bq/L)",
                      stroke=False,
                      color=color,  # Set the color based on the range
                      fill=True).add_to(map)

# 주변지역을 묶어서 대략적인 개수 분포를 볼 수 있도록 마커 클러스터 생성
mc = MarkerCluster()

for i in rdt.index:
    lat = rdt.loc[i, '위도']
    lon = rdt.loc[i, '경도']
    mc.add_child(folium.CircleMarker([lat, lon]))

# 클러스터를 맵에 추가
map.add_child(mc)

# 지도 표시
map